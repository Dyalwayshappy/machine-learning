import numpy as np
import matplotlib.pyplot as plt
from utils import *


def find_closest_centroids(X, centroids):

    K = centroids.shape[0]
    idx = np.zeros(X.shape[0], dtype=int)
    for i in range(X.shape[0]):
        distance = []
        for j in range(K):
            norm_ij = np.linalg.norm(X[i] - centroids[j])
            distance.append(norm_ij)
        idx[i] = np.argmin(distance)

    return idx

X = load_data()
#初始化centroids
initial_centroids = np.array([[3,3], [6,2], [8,5]])
idx = find_closest_centroids(X, initial_centroids)
print(idx[:3]) #first three

def compute_centroids(X, idx, K):

    # Useful variables
    m, n = X.shape

    # You need to return the following variables correctly
    centroids = np.zeros((K, n))
    for k in range(K):
        points = X[idx == k]
        if points.shape[0] > 0:
             centroids[k] = np.mean(points, axis=0)

    return centroids
K = 3
centroids = compute_centroids(X, idx, K)
print("The centroids are:", centroids)
